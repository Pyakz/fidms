/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public'
import { Route as AppRouteImport } from './routes/_app'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as PublicSignUpRouteImport } from './routes/_public/sign-up'
import { Route as PublicSignInRouteImport } from './routes/_public/sign-in'
import { Route as PublicForgotPasswordRouteImport } from './routes/_public/forgot-password'
import { Route as PublicAboutRouteImport } from './routes/_public/about'
import { Route as AppSettingsRouteImport } from './routes/_app/settings'
import { Route as AppProfileRouteImport } from './routes/_app/profile'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard'
import { Route as AppInventoryMotorcyclesRouteImport } from './routes/_app/inventory/motorcycles'
import { Route as AppInventoryCarsRouteImport } from './routes/_app/inventory/cars'

const PublicRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)
const PublicSignUpRoute = PublicSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => PublicRoute,
} as any)
const PublicSignInRoute = PublicSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => PublicRoute,
} as any)
const PublicForgotPasswordRoute = PublicForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => PublicRoute,
} as any)
const PublicAboutRoute = PublicAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => PublicRoute,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AppProfileRoute = AppProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)
const AppInventoryMotorcyclesRoute = AppInventoryMotorcyclesRouteImport.update({
  id: '/inventory/motorcycles',
  path: '/inventory/motorcycles',
  getParentRoute: () => AppRoute,
} as any)
const AppInventoryCarsRoute = AppInventoryCarsRouteImport.update({
  id: '/inventory/cars',
  path: '/inventory/cars',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof AppDashboardRoute
  '/profile': typeof AppProfileRoute
  '/settings': typeof AppSettingsRoute
  '/about': typeof PublicAboutRoute
  '/forgot-password': typeof PublicForgotPasswordRoute
  '/sign-in': typeof PublicSignInRoute
  '/sign-up': typeof PublicSignUpRoute
  '/': typeof PublicIndexRoute
  '/inventory/cars': typeof AppInventoryCarsRoute
  '/inventory/motorcycles': typeof AppInventoryMotorcyclesRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof AppDashboardRoute
  '/profile': typeof AppProfileRoute
  '/settings': typeof AppSettingsRoute
  '/about': typeof PublicAboutRoute
  '/forgot-password': typeof PublicForgotPasswordRoute
  '/sign-in': typeof PublicSignInRoute
  '/sign-up': typeof PublicSignUpRoute
  '/': typeof PublicIndexRoute
  '/inventory/cars': typeof AppInventoryCarsRoute
  '/inventory/motorcycles': typeof AppInventoryMotorcyclesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_app/dashboard': typeof AppDashboardRoute
  '/_app/profile': typeof AppProfileRoute
  '/_app/settings': typeof AppSettingsRoute
  '/_public/about': typeof PublicAboutRoute
  '/_public/forgot-password': typeof PublicForgotPasswordRoute
  '/_public/sign-in': typeof PublicSignInRoute
  '/_public/sign-up': typeof PublicSignUpRoute
  '/_public/': typeof PublicIndexRoute
  '/_app/inventory/cars': typeof AppInventoryCarsRoute
  '/_app/inventory/motorcycles': typeof AppInventoryMotorcyclesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/profile'
    | '/settings'
    | '/about'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/inventory/cars'
    | '/inventory/motorcycles'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/profile'
    | '/settings'
    | '/about'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/inventory/cars'
    | '/inventory/motorcycles'
  id:
    | '__root__'
    | '/_app'
    | '/_public'
    | '/_app/dashboard'
    | '/_app/profile'
    | '/_app/settings'
    | '/_public/about'
    | '/_public/forgot-password'
    | '/_public/sign-in'
    | '/_public/sign-up'
    | '/_public/'
    | '/_app/inventory/cars'
    | '/_app/inventory/motorcycles'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/sign-up': {
      id: '/_public/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof PublicSignUpRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/sign-in': {
      id: '/_public/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof PublicSignInRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/forgot-password': {
      id: '/_public/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof PublicForgotPasswordRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/about': {
      id: '/_public/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicAboutRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/profile': {
      id: '/_app/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/inventory/motorcycles': {
      id: '/_app/inventory/motorcycles'
      path: '/inventory/motorcycles'
      fullPath: '/inventory/motorcycles'
      preLoaderRoute: typeof AppInventoryMotorcyclesRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/inventory/cars': {
      id: '/_app/inventory/cars'
      path: '/inventory/cars'
      fullPath: '/inventory/cars'
      preLoaderRoute: typeof AppInventoryCarsRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppDashboardRoute: typeof AppDashboardRoute
  AppProfileRoute: typeof AppProfileRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppInventoryCarsRoute: typeof AppInventoryCarsRoute
  AppInventoryMotorcyclesRoute: typeof AppInventoryMotorcyclesRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRoute: AppDashboardRoute,
  AppProfileRoute: AppProfileRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppInventoryCarsRoute: AppInventoryCarsRoute,
  AppInventoryMotorcyclesRoute: AppInventoryMotorcyclesRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface PublicRouteChildren {
  PublicAboutRoute: typeof PublicAboutRoute
  PublicForgotPasswordRoute: typeof PublicForgotPasswordRoute
  PublicSignInRoute: typeof PublicSignInRoute
  PublicSignUpRoute: typeof PublicSignUpRoute
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicAboutRoute: PublicAboutRoute,
  PublicForgotPasswordRoute: PublicForgotPasswordRoute,
  PublicSignInRoute: PublicSignInRoute,
  PublicSignUpRoute: PublicSignUpRoute,
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
